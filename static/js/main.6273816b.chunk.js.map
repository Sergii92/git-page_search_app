{"version":3,"sources":["reducers/types.ts","reducers/actions.ts","constants/api.ts","reducers/selectors.ts","asets/css/utils.js","constants/breakpoints.ts","components/Header/styles.ts","components/Header/Header.tsx","components/Aside/styles.ts","components/Aside/Aside.tsx","components/Section/styles.ts","components/Section/Section.tsx","components/Main/styles.ts","components/Main/Main.tsx","pages/HomePages.tsx","reducers/hoocks/useGetRepositories.ts","helpers/localStorageHalper.ts","containers/App.tsx","core/middleware/core.ts","reducers/helpers/helper.ts","reducers/reducer.ts","core/rootReducer.ts","core/store.ts","index.tsx"],"names":["TYPES","repositoriesActions","repositories","type","payload","items","value","API","selectRepositories","state","selectSearchStr","searchResults","respondToCustomWidth","size","direction","BREAKPOINT","HeaderWrapper","styled","div","LogoWrapper","LogoImg","Tile","Text","p","props","HeaderDesc","Header","AsideWrapper","Input","input","AsideHeader","h2","List","ul","ListItem","li","Aside","debounced","searchParams","useSelector","onChange","e","currentTarget","map","item","SectionWrapper","Item","LinkItem","a","ItemTile","ItenProperties","Span","span","Section","data","href","html_url","target","name","language","description","id","MainWrapper","Main","HomePage","dispatch","useDispatch","getRepositories","useCallback","search","length","fetch","responce","status","Error","json","console","log","useGetrepositories","useDebouncedCallback","useEffect","searchResalt","localStorage","getItem","JSON","parse","getAllFromLocalStorage","setHandler","searchArr","setItem","stringify","window","addEventListener","removeEventListener","Wrapper","Container","App","devtools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancedStore","compose","applyMiddleware","setSerchItemsHelper","searchArray","searchValue","result","shift","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6273816b.chunk.js","sourcesContent":["export const TYPES = {\r\n  GET_REPOSITORIES: \"GET_REPOSITORIES\",\r\n  SET_SEARCH_STR: \"SET_SEARCH_STR\",\r\n  SET_SINGL_SEARH: \"SET_SINGL_SEARH\",\r\n};\r\n","import { TYPES } from \"./types\";\r\n\r\nexport const repositoriesActions = {\r\n  fillrepositories: (repositories: string[]) => ({\r\n    type: TYPES.GET_REPOSITORIES,\r\n    payload: repositories,\r\n  }),\r\n  setSearchArr: (items: string[]) => ({\r\n    type: TYPES.SET_SEARCH_STR,\r\n    payload: items,\r\n  }),\r\n  setSinglSearch: (value: string) => ({\r\n    type: TYPES.SET_SINGL_SEARH,\r\n    payload: value,\r\n  }),\r\n};\r\n","export const API = {\r\n  REPOSITORIES: \"https://api.github.com/search/repositories\",\r\n};\r\n","export const selectRepositories = (state: any) =>\r\n  state.repositories.repositories;\r\nexport const selectSearchStr = (state: any) => state.repositories.searchResults;\r\n","export const respondToCustomWidth = (size, direction = \"max\") =>\r\n  ` @media screen and (${direction}-width: ${size}px)`;\r\n","export const BREAKPOINT = {\r\n  tablet: \"640px\",\r\n  laptop: \"1023\",\r\n  desktop: \"1280px\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { respondToCustomWidth } from \"../../asets/css/utils\";\r\nimport { BREAKPOINT } from \"../../constants/breakpoints\";\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  line-height: 80px;\r\n  padding: 20px 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \" \";\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0px;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #d1cbae;\r\n    opacity: 0.7;\r\n  }\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    flex-direction: column;\r\n    height: auto;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const LogoWrapper = styled.div`\r\n  width: 30%;\r\n  max-width: 500px;\r\n  display: flex;\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const LogoImg = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: contain;\r\n  margin-right: 10px;\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Tile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: ${(props: { size?: string }) => props.size};\r\n  color: #d1cbae;\r\n  margin: 0px;\r\n  line-height: 1em;\r\n`;\r\nexport const HeaderDesc = styled.div`\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  HeaderWrapper,\r\n  LogoWrapper,\r\n  LogoImg,\r\n  Tile,\r\n  Text,\r\n  HeaderDesc,\r\n} from \"./styles\";\r\n\r\nexport const Header: React.FC<{}> = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <LogoWrapper>\r\n        <LogoImg />\r\n        <Tile>\r\n          <Text size=\"26px\">reQuestum</Text>\r\n          <Text> web development company</Text>\r\n        </Tile>\r\n      </LogoWrapper>\r\n      <HeaderDesc>\r\n        <Text>Github users search app</Text>\r\n      </HeaderDesc>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { respondToCustomWidth } from \"../../asets/css/utils\";\r\nimport { BREAKPOINT } from \"../../constants/breakpoints\";\r\n\r\nexport const AsideWrapper = styled.div`\r\n  width: 30%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  border-radius: 20px;\r\n  height: 30px;\r\n  border: none;\r\n  padding-left: 15px;\r\n  outline: 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const AsideHeader = styled.h2`\r\n  color: white;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  color: white;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 24px;\r\n  margin-bottom: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectSearchStr } from \"../../reducers/selectors\";\r\n\r\nimport { AsideWrapper, Input, List, ListItem, AsideHeader } from \"./styles\";\r\n\r\nexport type Props = {\r\n  debounced: (value: string) => void;\r\n};\r\n\r\nexport const Aside: React.FC<Props> = ({ debounced }) => {\r\n  const searchParams: string[] = useSelector(selectSearchStr);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    debounced(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <AsideWrapper>\r\n      <Input onChange={onChange} />\r\n      <AsideHeader>Search history</AsideHeader>\r\n      <List>\r\n        {searchParams.map((item: string) => {\r\n          return <ListItem key={item}>{item}</ListItem>;\r\n        })}\r\n      </List>\r\n    </AsideWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { BREAKPOINT } from \"../../constants/breakpoints\";\r\nimport { respondToCustomWidth } from \"../../asets/css/utils\";\r\n\r\nexport const SectionWrapper = styled.div`\r\n  width: 70%;\r\n  max-width: 1000px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    margin 0 auto;\r\n    width:100%\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  max-width: 400px;\r\n  width: 40%;\r\n  height: max-content;\r\n  border: 1px solid white;\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  margin-bottom: 30px;\r\n  height: auto;\r\n  overflow: hidden;\r\n  word-wrap: break-word;\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const LinkItem = styled.a`\r\n  color: black;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    opacity: 0.8;\r\n    color: #ccc;\r\n  }\r\n`;\r\n\r\nexport const ItemTile = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ItenProperties = styled.p`\r\n  font-size: 16px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectRepositories } from \"../../reducers/selectors\";\r\n\r\nimport {\r\n  SectionWrapper,\r\n  Item,\r\n  LinkItem,\r\n  ItenProperties,\r\n  ItemTile,\r\n  Span,\r\n} from \"./styles\";\r\n\r\nexport const Section: React.FC<{}> = () => {\r\n  const data = useSelector(selectRepositories);\r\n  interface Data {\r\n    id: number;\r\n    html_url: string;\r\n    name: string;\r\n    language: string;\r\n    description: string;\r\n  }\r\n  return (\r\n    <SectionWrapper>\r\n      {data?.map((item: Data) => {\r\n        return (\r\n          <Item key={item?.id}>\r\n            <LinkItem href={item?.html_url} target=\"blank\">\r\n              {item.name}\r\n            </LinkItem>\r\n            <ItemTile>\r\n              <ItenProperties>Language: </ItenProperties>{\" \"}\r\n              <Span>{item.language}</Span>\r\n            </ItemTile>\r\n            <ItemTile>\r\n              <ItenProperties>Description: </ItenProperties>{\" \"}\r\n              <Span>{item.description}</Span>\r\n            </ItemTile>\r\n          </Item>\r\n        );\r\n      })}\r\n    </SectionWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { BREAKPOINT } from \"../../constants/breakpoints\";\r\nimport { respondToCustomWidth } from \"../../asets/css/utils\";\r\n\r\nexport const MainWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin-top: 30px;\r\n}\r\n  ${respondToCustomWidth(BREAKPOINT.laptop)} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Aside, Props as AsideTypes } from \"../Aside/Aside\";\r\nimport { Section } from \"../Section/Section\";\r\n\r\nimport { MainWrapper } from \"./styles\";\r\n\r\nexport const Main: React.FC<AsideTypes> = ({ debounced }) => {\r\n  return (\r\n    <MainWrapper>\r\n      <Aside debounced={debounced}></Aside>\r\n      <Section />\r\n    </MainWrapper>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\n\r\nimport { useGetrepositories } from \"../reducers/hoocks/useGetRepositories\";\r\nimport { repositoriesActions } from \"../reducers/actions\";\r\nimport { selectSearchStr } from \"../reducers/selectors\";\r\nimport {\r\n  getAllFromLocalStorage,\r\n  setAllToLocalStorage,\r\n} from \"../helpers/localStorageHalper\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Header } from \"../components/Header/Header\";\r\nimport { Main } from \"../components/Main/Main\";\r\n\r\nconst HomePage: React.FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const { getRepositories } = useGetrepositories();\r\n  const searchResults = useSelector(selectSearchStr);\r\n\r\n  const debounced = useDebouncedCallback((value: string) => {\r\n    getRepositories(value);\r\n    dispatch(repositoriesActions.setSinglSearch(value));\r\n  }, 1500);\r\n\r\n  // set search str from localStorage to redux store on innit\r\n  useEffect(() => {\r\n    getRepositories(\"\");\r\n    const searchParams = getAllFromLocalStorage();\r\n    dispatch(repositoriesActions.setSearchArr(searchParams));\r\n  }, [getRepositories, dispatch]);\r\n\r\n  //set search str from redux store to localStorage beforeunload\r\n  useEffect(() => {\r\n    const setHandler = () => {\r\n      setAllToLocalStorage(searchResults);\r\n    };\r\n    window.addEventListener(\"beforeunload\", setHandler, false);\r\n    return () => window.removeEventListener(\"beforeunload\", setHandler, false);\r\n  }, [searchResults]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Header />\r\n        <Main debounced={debounced} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background-color: #3a4047;\r\n  position: relative;\r\n  margin: 0;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 90%;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n`;\r\n","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { repositoriesActions } from \"../actions\";\r\n\r\nimport { API } from \"../../constants/api\";\r\n\r\nexport const useGetrepositories = () => {\r\n  const dispatch = useDispatch();\r\n  const getRepositories = useCallback(\r\n    async (value: string) => {\r\n      const search =\r\n        value.length > 0\r\n          ? `${value}+language:javascript`\r\n          : `language:javascript`;\r\n\r\n      try {\r\n        const responce = await fetch(`${API.REPOSITORIES}?q=${search}`);\r\n        if (responce.status !== 200) {\r\n          throw new Error(`${responce.status}`);\r\n        }\r\n        const data = await responce.json();\r\n\r\n        dispatch(repositoriesActions.fillrepositories(data.items));\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n  return { getRepositories };\r\n};\r\n","export const setAllToLocalStorage = (searchArr: string[]) => {\r\n  localStorage.setItem(\"SerchParam\", JSON.stringify(searchArr));\r\n};\r\n\r\nexport const getAllFromLocalStorage = (): string[] => {\r\n  const searchResalt = localStorage.getItem(\"SerchParam\") || \"[]\";\r\n  return JSON.parse(searchResalt);\r\n};\r\n","import HomePage from \"../pages/HomePages\";\n\nconst App: React.FC<{}> = () => {\n  return <HomePage />;\n};\n\nexport default App;\n","import { applyMiddleware, compose } from \"redux\";\r\n\r\nconst devtools = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\nconst composeEnchancers = devtools ? devtools : compose;\r\n\r\nconst middleware: any = [];\r\n\r\nconst enhancedStore = composeEnchancers(applyMiddleware(...middleware));\r\n\r\nexport { enhancedStore };\r\n","export const setSerchItemsHelper = (\r\n  searchArray: string[],\r\n  searchValue: string\r\n) => {\r\n  let result = [];\r\n\r\n  result = [...searchArray, searchValue];\r\n  if (result.length > 5) {\r\n    result.shift();\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { TYPES } from \"./types\";\r\nimport { setSerchItemsHelper } from \"./helpers/helper\";\r\n\r\nimport { AnyAction } from \"redux\";\r\n\r\nconst initialState = {\r\n  repositories: [],\r\n  searchResults: [],\r\n};\r\n\r\nexport const repositoriesReducer = (\r\n  state = initialState,\r\n  action: AnyAction\r\n) => {\r\n  switch (action.type) {\r\n    case TYPES.GET_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        repositories: action.payload,\r\n      };\r\n    case TYPES.SET_SEARCH_STR:\r\n      return {\r\n        ...state,\r\n        searchResults: action.payload,\r\n      };\r\n    case TYPES.SET_SINGL_SEARH:\r\n      return {\r\n        ...state,\r\n        searchResults: setSerchItemsHelper(state.searchResults, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { repositoriesReducer as repositories } from \"../reducers/reducer\";\r\n\r\nexport const rootReducer = combineReducers({ repositories });\r\n","import { createStore } from \"redux\";\r\nimport { enhancedStore } from \"./middleware/core\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nexport const store = createStore(rootReducer, enhancedStore);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App\";\n\nimport { store } from \"./core/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}